<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	<!-- 加载properties -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- JPA的数据源 -->
	<bean id="dataSource_JPA" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.driverClassName}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- Spring 整合JPA配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource_JPA"></property>

		<!-- 指定实体类包路径 -->
		<property name="packagesToScan" value="cn.itcast.spider.entity"></property>

		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				<property name="database" value="MYSQL" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
				<property name="showSql" value="false" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.query.substitutions" value="true 1, false 0" />
				<entry key="hibernate.default_batch_fetch_size" value="16" />
				<entry key="hibernate.max_fetch_depth" value="2" />
				<entry key="hibernate.generate_statistics" value="true" />
				<entry key="hibernate.bytecode.use_reflection_optimizer"
					value="true" />
				<entry key="hibernate.cache.use_second_level_cache" value="false" />
				<entry key="hibernate.cache.use_query_cache" value="false" />
				<!-- acb_id自动转成abcId -->
				<entry key="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy" />
			</map>
		</property>
	</bean>

	<!-- JPA事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<!-- 注解管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 扫描dao -->
	<jpa:repositories base-package="cn.itcast.spider.dao.jpa" />
	
	
	<!-- ================================================================================ -->
	
	
	<!-- Mybatis的数据源 -->
	<bean id="dataSource_mybatis" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.driverClassName}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
		<!-- 配置sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSource_mybatis"/>
		
		<!-- 加载mybatis核心配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"/>
	</bean>
	
	<!-- 配置mapper自动扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置包扫描mapper -->
		<property name="basePackage" value="cn.itcast.spider.dao.mapper"/>
	</bean>
	
	<!-- =============================================TODO： 注解管理事务 和  aop方式管理事务的选择  ？     -->
	
	<!-- 配置事务管理器 -->
<!-- 	<bean id="transactionManager_mybatis"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		设置数据源
		<property name="dataSource" ref="dataSource_mybatis"/>
	</bean>
	
	配置通知
	<tx:advice id="txAdvice" transaction-manager="transactionManager_mybatis">
		<tx:attributes>
			配置需要事务的方法前缀
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			
			配置不需要事务的方法前缀
			<tx:method name="query*" propagation="SUPPORTS" read-only="false"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="false"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="false"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	
	配置切面
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* cn.itcast.spider.service.subsidiary..*.*(..))"/>
	</aop:config> -->
	
	
</beans>